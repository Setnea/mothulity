#!/bin/bash

#SBATCH --job-name="{{job_name}}"
#SBATCH --partition={{partition}}
#SBATCH --nodes={{nodes}}
#SBATCH --ntasks-per-node={{ntasks_per_node}}
#SBATCH --mem-per-cpu={{mem_per_cpu}}

###Test whether there are *shared and *cons.taxonomy file. Exit otherwise###

if [[ "$(echo *shared)" != '*shared' && "$(echo *cons.taxonomy)" != '*cons.taxonomy' ]]; then
  echo *shared and *cons.taxonomy files found.;
else
  echo *shared or *cons.taxonomy file not found. Quitting...;
  headnode_notifier.py --to {{notify_email}} --subject '{{job_name}} analysis part has failed' --body 'Failure due to a lack of *shared and *cons.taxonomy file. See the logfile attach to inspect the cause.' --attach *logfile;
  exit;
fi

###OTU approach analysis###

#Create directories and shorten shared file name

mkdir -p ./analysis/OTU/alpha ./analysis/OTU/beta
cp *shared ./analysis/OTU/{{job_name}}.shared
cp *cons.tax.summary ./analysis/OTU/alpha/{{job_name}}.tax.summary
{% if junk_grps != None %}
#Go to subdirectory, remove junk groups and subsample shared file

cd ./analysis/OTU
mothur '#set.current(processors={{processors}}, shared={{job_name}}.shared); remove.groups(shared=current, groups={{junk_grps}}); sub.sample(shared=current)'

#Copy non-subsampled shared file to alpha directory and subsampled shared file to beta directory

cp {{job_name}}.shared ./alpha
cp {{job_name}}.{{label}}.pick.{{label}}.subsample.shared ./beta/{{job_name}}.{{label}}.subsample.shared
{% else %}
#Go to subdirectory, and subsample shared file

cd ./analysis/OTU
mothur '#set.current(processors={{processors}}, shared={{job_name}}.shared); sub.sample(shared=current)'

#Copy non-subsampled shared file to alpha directory and subsampled shared file to beta directory

cp {{job_name}}.shared ./alpha
cp {{job_name}}.{{label}}.subsample.shared ./beta/
{% endif %}
#Go to alpha directory and create krona chart, rarefaction, summary table

cd ./alpha
mothur_krona_XML.py {{job_name}}.tax.summary > {{job_name}}.krona.xml
ktImportXML {{job_name}}.krona.xml -o {{job_name}}.krona.html
mothur '#set.current(processors={{processors}}, shared={{job_name}}.shared); rarefaction.single(shared=current, calc=sobs, freq=100); summary.single(shared=current, calc=nseqs-coverage-sobs-invsimpson-shannon)'
{{msc_path}} --rarefaction {{job_name}}.groups.rarefaction
{{msc_path}} --summary-table {{job_name}}.groups.summary

#Go to beta directory and create dist files for Jaccard and YC measures

cd ../beta
mothur '#set.current(processors={{processors}}, shared={{job_name}}.{{label}}.subsample.shared); dist.shared(shared=current, calc=thetayc-jclass, output=square)'

#Create phylogenetic tree for Jaccard and YC measures

mothur '#tree.shared(phylip={{job_name}}.{{label}}.subsample.jclass.{{label}}.square.dist); tree.shared(phylip={{job_name}}.{{label}}.subsample.thetayc.{{label}}.square.dist)'

#Create scatter plots upon NMDS for Jaccard and YC measures

mothur '#nmds(phylip={{job_name}}.{{label}}.subsample.jclass.{{label}}.square.dist); nmds(phylip={{job_name}}.{{label}}.subsample.thetayc.{{label}}.square.dist)'

#Draw beta directory pictures for Jaccard and YC measures

{{msc_path}} --phylip {{job_name}}.{{label}}.subsample.jclass.{{label}}.square.dist --tree {{job_name}}.{{label}}.subsample.jclass.{{label}}.square.tre --axes {{job_name}}.{{label}}.subsample.jclass.{{label}}.square.nmds.axes
{{msc_path}} --phylip {{job_name}}.{{label}}.subsample.thetayc.{{label}}.square.dist --tree {{job_name}}.{{label}}.subsample.thetayc.{{label}}.square.tre --axes {{job_name}}.{{label}}.subsample.thetayc.{{label}}.square.nmds.axes

#Go to OTU directory

cd ../

#Render html output
{{msc_path}} --render-html --job-name {{job_name}} --label {{label}}

#Go to project's root directory

cd ../../

#Zip the results

zip -r {{job_name}}.zip analysis/

#Send mail
headnode_notifier.py --to {{notify_email}} --subject '{{job_name}} analysis part has finished' --body 'Please download the attachment and inspect the results of {{job_name}}.' --attach {{job_name}}.zip
